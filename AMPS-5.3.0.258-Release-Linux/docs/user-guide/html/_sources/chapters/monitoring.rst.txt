.. index:: Monitoring interface, Web console,

.. include:: ./macros.inc
.. _#ug-monitoring:

23. Monitoring Interface
=========================

The AMPS monitoring interface has two distinct components:

* A basic monitoring interface that provides statistics for the AMPS instance
  in common machine-readable formats. This interface also provides
  administrative functions, such as enabling and disabling transports,
  disconnecting clients, and upgrading and downgrading replication links.

* The AMPS *Galvanometer*, a browser-based monitoring tool that shows a
  graphical representation of the statistics for AMPS. The Galvanometer
  includes information about replication flow across the set of connected
  instances. It includes the ability to enter subscriptions and queries,
  and display the results in a grid.

.. include:: ./monitor-configuration.inc
Basic Monitoring Interface
--------------------------

The basic monitoring interface is useful for examining many important aspects
about an AMPS instance. This includes health and monitoring information for
the AMPS engine as well as the host AMPS is running on. All of this information
is designed to be easily accessible to make gathering performance and
availability information from AMPS easy. The monitoring interface also
provides easy access to perform administrative actions.

The root of the AMPS Monitoring interface URI contains the following child resources:

* The ``host`` resource provides information about the current operating system state
* The ``instance`` resource provides information about the instance of AMPS
* The ``administration`` resource provides access to functions that modify the state of the instance (such as disconnecting a client)

The information in the monitoring database is taken from the statistics
database for the AMPS instance. AMPS provides actions for managing the
statistics database, as described in the section on Actions, under
:ref:`#ug-actions-do-stats`.

The fields provided through the basic monitoring interface (and the statistics database) are described in the *AMPS Monitoring Reference*, available on |doc-site|. 

.. include:: ./time_range_selection.inc
.. include:: ./output_formatting.inc
.. _#ug-galvanometer:

Galvanometer
------------

The AMPS Galvanometer provides an extensive set of visualizations of the state
of the instance. Galvanometer also provides the ability to query the instance
and display the results.

.. _#ug-galvanometer-subscribe:


Authorization and Entitlement in Galvanometer
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In order to enable Galvanometer to provide credentials to the AMPS 
instance (in case it is required to access AMPS monitoring information),
the special ``WWWAuthenticate`` option is supported.

The option can have the following values:

- Negotiate (Kerberos)
- NTLM
- Basic realm="<SECURITY_DOMAIN>" (Basic Auth)

When using ``Negotiate`` or ``NTLM``, Galvanometer will automatically 
supply corresponding authorization tokens to AMPS. If ``Basic Auth``
is used for authorization, the Login/Password dialog will require a 
user to enter credentials.

.. code-block:: xml

    <Admin>
        ...

        <WWWAuthenticate>Basic realm="AMPS Admin"</WWWAuthenticate>

        ...
    </Admin>


.. _#ug-anonymous-paths:

Using Anonymous Paths
^^^^^^^^^^^^^^^^^^^^^^

The ``AnonymousPaths`` option allows Galvanometer to bypass authentication
and/or entitlement for Admin paths that match a regular expression.

The most common use of Anonymous paths is to allow Galvanometer to correctly
display the replication graph when the instance is configured to use ``Negotiate``
or ``NTLM`` for authorization.  Galvanometer determins the replication graph
by polling the instances that participate in replication. Since most browsers
disallow sending cross-domain authorization tokens, it is necessary to provide
access to replication paths without requiring authorization for Galvanometer to
be able to display the replication graph. For installations that use ``Negotiate``
or ``NTLM``, Galvanometer may not be allowed to construct a replication graph if this
option is not set.

Anonymous paths can also be used to provide access to a specific resource, without
allowing access to any other information in the Admin interface. For example, an
instance might specify ``^/amps$`` for unauthenticated users to be able to
verify that the instance is running and processing Admin requests, but without
allowing those users to obtain any other data about the instance.

The following example shows how to add an anonymous path directive that
allows any connection to access replication information about the instance.

.. code-block:: xml

    <Admin>
       <!-- ... other configuration here ... -->

       <!--  Specify anonymous paths. In this
             case, allow any user to access replication
             information -->

       <AnonymousPaths>^/amps/instance/replication</AnonymousPaths>
    </Admin> 

The ``AnonymousPaths`` option is **disabled** by default.


Make Replication page work with NTLM / Negotiate authentication 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

When using ``Negotiate`` or ``NTLM`` for authorization and/or entitlement, 
it prevents Galvanometer from correctly displaying replication graphs by forbidding 
access to destination instances of AMPS since most browsers disallow sending 
cross-domain authorization tokens that are required in order to authorize AJAX 
data requests from a browser.


.. index:: Galvanometer; anonymous paths


Enabling Queries and Subscriptions in Galvanometer
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Much of the functionality available in Galvanometer uses the basic monitoring
interface.

Galvanometer submits queries and subscriptions to AMPS using the ``websocket``
protocol. To use these functions in Galvanometer, you must provide the name
of a ``Transport`` of type ``websocket`` for Galvanometer to use.

For example, the following directive specifies that Galvanometer will use
the ``Transport`` with the ``Name`` of ``websocket-any`` to submit commands
to AMPS.

.. code-block:: xml


    <Admin>
       <!-- ... existing configuration ... -->

       <!-- look up the transport named websocket-any in
            this config file, and make connections to
            that Transport for sending commands to AMPS -->
       <SQLTransport>websocket-any</SQLTransport>
    </Admin> 

The configuration block above requires that the AMPSConfig file contains a
``Transport`` with the ``Name`` of ``websocket-any`` of ``Type`` ``websocket``. 

When this configuration item is specified, Galvanometer will enable the query
and subscription capabilities, and submit commands to AMPS over the specified
``Transport``.

For example, the ``websocket-any`` transport referenced in the snippet
above might be defined as follows:

.. code-block:: xml


    <Transports>
       <!-- ...
            existing transports remain -->

        <Transport>
            <Name>websocket-any</Name>
            <Protocol>websocket</Protocol>
            <Type>tcp</Type>
            <InetAddr>9008</InetAddr>
        </Transport>

    </Transports>

Notice that Galvanometer connects as a client using this ``Transport``. There
is no special transport or protocol for Galvanometer, and the security
configured for the instance (or the ``Transport``) applies to Galvanometer.


Queries and Subscriptions with Basic Auth in Galvanometer
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When Basic Auth is used for authorization and entitlement, an additional
option ``TrustedAdmin`` allows Galvanometer to use a valid session 
cookie created after successful authorization for queries and subscriptions.
This option forces AMPS to reuse credentials supplied by Galvanometer 
for websocket connections created by Galvanometer:

.. code-block:: xml

    <Protocols>

        ...

        <Protocol>
            <Name>websocket-portal</Name>
            <Module>websocket</Module>

            <!-- disabled by default -->
            <TrustedAdmin>enabled</TrustedAdmin>

        </Protocol>

        ...

    </Protocols>

``TrustedAdmin`` is only supported by the websocket-based protocols 
and is **disabled** by default.


.. index:: Galvanometer; disabling




Disabling Galvanometer
~~~~~~~~~~~~~~~~~~~~~~

Galvanometer is enabled in the monitoring interface by default. To disable
Galvanometer, add the following directive to the ``Admin`` configuration
block:

.. code-block:: xml

    <Admin>
       <!-- ... existing configuration ... -->
       <Galvanometer>disabled</Galvanometer>
    </Admin> 

Disabling Galvanometer with this configuration item has no effect on the basic
monitoring interface.
